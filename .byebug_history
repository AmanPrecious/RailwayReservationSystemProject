continue
@passenger.save
n
@passenger = Passenger.new(passenger_params.merge!(ticket:@ticket))
@passenger = Passenger.new(passenger_params.merge!(ticket:@ticket)).valid?
@passenger = Passenger.new(passenger_params.merge!(ticket:@ticket))
passenger_params
continue
passenger_params
@passenger = Passenger.new(passenger_params.merge!(ticket:@ticket))
@ticket = Ticket.find(params[:ticket_id])
continue
 @passenger.save
 @passenger = Passenger.new(passenger_params.merge!(ticket:@ticket))
 @ticket = Ticket.find(params[:ticket_id])
 @passenger.valid?
 @passenger.seat_id=2
 @passenger.valid?
 @passenger.seat_no=3
 @passenger.valid?
 @passenger = Passenger.new(passenger_params.merge!(ticket:@ticket))
 @ticket = Ticket.find(params[:ticket_id])
continue
@passenger.destroy
passenger_path(@passenger)
@passenger
continue
@passenger.update(passenger_params)
passenger_params
  @ticket = Ticket.find(@passenger.ticket_id)
 @passenger = Passenger.find(params[:id])
@passenger
continue
n
@passenger
Passenger.find(params[:id])
params[:id]
@passenger 
params[:ticket_id]
continue
n
params[:ticket_id]
params
continue
n
continue
passenger
@passenger
c
@passenger.errors
c
@ticket
@passenger.errors
@passenger.errors.any?
@passenger
continue
@ticket.fare
n
@ticket.fare
@payment.payment_amount
continue
@payment.payment_amount
 @ticket.fare
 @ticket.booking_status = "Completed"
@ticket.booking_status
continue
a.valid?
a = Ticket.new(ticket_params)
continue
a.valid?
a = Ticket.new(ticket_params)
a.valid?
a = Ticket.new(ticket_params)
Ticket.new(ticket_params)
Ticket.create(ticket_params)
current_user.tickets = Ticket.create(ticket_params)
if current_user.tickets = Ticket.create(ticket_params)
@ticket = current_user.ticket.create!(ticket_params)
@ticket = current_user.ticket.new(tickets_params)
ticket_params
params
continue
@ticket.save
continue
@ticket.save
@ticket = current_user.tickets.build(ticket_params)
continue
@ticket.save
@ticket.booking_status
@ticket.booking_status="Completed"
@ticket.booking_status
booking_status
@ticket
@ticker
continue
payment_params
params
 @ticket = Ticket.find(params[:ticket_id])
continue
ticket.id
 get ticket_passengers_path(ticket_id:ticket.id)
 passenger = FactoryBot.create(:passenger,ticket:ticket)
ticket= FactoryBot.create(:ticket,train:train,user:@user)
 train = FactoryBot.create(:train)
continue
tickets
ticket = FactoryBot.create(:ticket,user:@user,train:train)
@user = FactoryBot.create(:user)
@user
ticket = FactoryBot.create(:ticket,user:@user,train:train)
   14:         ticket = FactoryBot.create(:ticket,user:@user,train:train)
 train = FactoryBot.create(:train)
continue
n
continue
ticket = FactoryBot.create(:ticket,user:@user,train:train)
ticket
train 
train = FactoryBot.create(:train)
@user
train
continue
n
continue
train
continue
train
continue
ticket.id
ticket
continue
n
continue
c
params
c
subject
train
user
c
user
c
user
c
n
user
c
user
c
user
continue
@train=Train.find(params[:train_id])
params
continue
@ticket
params
continue
n
params
continue
params
continue
@ticket.errors
@ticket
continue
n
nb
n
@ticket.save
@ticket.valid?
continue
params
params:[:mobile]
params:[mobile]
mobile.validates?
continue
exit
continue
n
continue
m
n
continue
f
form
passenger_form
f
continue
f
name
association
continue
n
continue
f.object.send(association).klass.new
association = :passengers
f.object.send(association).klass.new
association
f
name
continue
d
params[:ticket][:passenger]
params[:ticket]
params
continue
params[:ticket][:passengers_attributes]
params["passengers_attributes"]
params[:ticket][:passengers_attributes]
params[:ticket][:passengers_attributes]['0']
params[:ticket][:passengers_attributes][0]
params[:ticket][:passengers_attributes]
params
params[:ticket][:passengers_attributes]
passengers_attributes
continue
n
continue
n
continue
n
continue
n
continue
Train.where("lower(train_name) LIKE :search", search: "%#{@parameter}%")
Train.where("lower(train_name) ILIKE :search", search: "%#{@parameter}%")
Train.where("lower(train_name) LIKE :search", search: "%#{@parameter}%")
Train.all.where("lower(train_name) LIKE :search", search: "%#{@parameter}%")
@parameter = "Humsafer" 
@parameter
parameter
Train.all.where("lower(train_name) LIKE :search", search: "%#{@parameter}%")
Train.where(train_name: "Humsafer Express")
Train.last
Train.pluck(:name)
Train.all.where("lower(name) LIKE :search", search: "%#{@parameter}%")
@parameter = params[:query].downcase
n
params[:query].blank?
params
